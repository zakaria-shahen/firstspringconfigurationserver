spring.datasource.url=jdbc:mysql://localhost:3306/first_microservice
spring.datasource.username=root
spring.datasource.password={cipher}b4e44983195d0b9ed326fb7070bfd28d678c9eda1284f105c7aa82fe63809902
spring.jpa.hibernate.ddl-auto=create-drop

management.endpoints.web.base-path=/
management.endpoints.enabled-by-default=true
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.health.db.enabled=false
management.health.diskspace.enabled=true


# Eureka configuration
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=http://eureka-server:8070/eureka/
# true By default
#eureka.client.fetch-registry=true
#eureka.client.register-with-eureka=true


# Kafka props

spring.cloud.stream.bindings.createLicenseEvent-out-0.destination=licensechange
# application/json by default
spring.cloud.stream.bindings.createLicenseEvent-out-0.content-type=application/json

# kafka Connection props

spring.cloud.stream.kafka.binder.brokers=kafkaserver:9092
# auto-create topics (schema)
spring.cloud.stream.kafka.binder.auto-create-topics=true


# invocation of the supplier @Bean every 30000 second
spring.integration.poller.fixed-delay=30000

# define auto-invoke function (producer)
# The framework provides a default polling mechanism that will trigger the invocation of the supplier @Bean
# and by default it will do so every second
# ref: https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#_suppliers_sources
# ref: https://docs.spring.io/spring-cloud-stream/docs/current/reference/html/spring-cloud-stream.html#_overview
#spring.cloud.function.definition=createLicenseEvent


# custom mapper
# ref: https://cloud.spring.io/spring-cloud-stream-binder-kafka/spring-cloud-stream-binder-kafka.html#_record_value_conversion
# https://refactorfirst.com/spring-cloud-stream-with-kafka-communication
#spring.cloud.stream.bindings.createLicenseEvent-out-0.producer.use-native-encoding=true
#spring.cloud.stream.kafka.bindings.createLicenseEvent-out-0.producer.configuration[serializer]=org.springframework.kafka.support.serializer.JsonSerializer

spring.zipkin.base-url=http://zipkin:9411
spring.zipkin.discovery-client-enabled=false
spring.sleuth.sampler.probability=1

logging.level.com.mycompany=debug


test.props=Hello, Spring Cloud Configuration